name: "FAP: Build and lint"
on: [push, pull_request]
jobs:
  ufbt-build-action:
    runs-on: ubuntu-latest
    name: 'ufbt: Build for Dev branch'
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Build with ufbt
        uses: flipperdevices/flipperzero-ufbt-action@v0.1
        id: build-app
        with:
          # Set to 'release' to build for latest published release version
          sdk-channel: dev
      - name: Upload app artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{ github.event.repository.name }}-${{ steps.build-app.outputs.suffix }}
          path: ${{ steps.build-app.outputs.fap-artifacts }}
      # You can remove this step if you don't want to check source code formatting
      - name: Lint sources
        uses: flipperdevices/flipperzero-ufbt-action@v0.1
        with:
          # skip SDK setup, we already did it in previous step
          skip-setup: true
          task: lint
          name: "FAP: Build for multiple SDK sources"
on:
  push:
    ## put your main branch name under "braches"
    #branches: 
    #  - master 
  pull_request:
  schedule: 
    # do a build every day
    - cron: "1 1 * * *"
jobs:
  ufbt-build-action:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - name: dev channel
            sdk-channel: dev
          - name: release channel
            sdk-channel: release
          - name: Unofficial firmware
            # example URL, replace with a valid one
            # you can also use other modes for specifying SDK sources
            sdk-index-url: https://flipper.example.com/directory.json
            sdk-channel: dev
    name: 'ufbt: Build for ${{ matrix.name }}'
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Build with ufbt
        uses: flipperdevices/flipperzero-ufbt-action@v0.1
        id: build-app
        with:
          sdk-channel: ${{ matrix.sdk-channel }}
          sdk-index-url: ${{ matrix.sdk-index-url }}
      - name: Upload app artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{ github.event.repository.name }}-${{ steps.build-app.outputs.suffix }}
          path: ${{ steps.build-app.outputs.fap-artifacts }}
          
